{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/MyShipments.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  _s();\n\n  const {\n    error,\n    data,\n    loading\n  } = useQuery(GET_SHIPMENTS, {});\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.users.map((user, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.id\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 46\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyShipments, \"WyHDqd1xgy8u8gq0vMPBohHiH1Q=\", false, function () {\n  return [useQuery];\n});\n\n_c = MyShipments;\nexport default MyShipments;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyShipments\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/MyShipments.js"],"names":["React","useQuery","gql","GET_SHIPMENTS","MyShipments","error","data","loading","users","map","user","key","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,aAAa,GAAGD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAME,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACE,aAAD,EAAgB,EAAhB,CAAzC;;AAIA,MAAII,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,cACGD,IAAI,IAAIA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,GAAP,kBAAe;AAAA,gBAAcD,IAAI,CAACE;AAAnB,OAAQD,GAAR;AAAA;AAAA;AAAA;AAAA,YAA9B;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;GAAMP,W;UAC6BH,Q;;;KAD7BG,W;AAeN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  const { error, data, loading } = useQuery(GET_SHIPMENTS, {\n    \n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div>\n      {data && data.users.map((user, key) => <p key={key}>{user.id}</p>)}\n    </div>\n  );\n};\n\nexport default MyShipments;\n"]},"metadata":{},"sourceType":"module"}