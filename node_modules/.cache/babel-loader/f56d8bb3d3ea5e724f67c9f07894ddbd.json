{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/MyShipments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { UserContext } from \"./context/UserContext\"; // const GET_SHIPMENTS = gql`\n//   query ($id: ID!) {\n//     user(id: $id) {\n//       shipments {\n//         id\n//         waybill\n//       }\n//     }\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyShipments = () => {\n  _s();\n\n  const {\n    state: {\n      waybill,\n      data,\n      loading\n    },\n    actions: {\n      createShipment,\n      setWaybill\n    }\n  } = useContext(UserContext); // const { error, data, loading } = useQuery(GET_SHIPMENTS, {\n  //   variables: {\n  //     id: 2,\n  //   },\n  // });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.user.shipments && data.user.shipments.map((shipment, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: shipment.id\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyShipments, \"7LUP1dUpeRxzUAHgQ/VUcwbHZKg=\");\n\n_c = MyShipments;\nexport default MyShipments;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyShipments\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/MyShipments.js"],"names":["React","useContext","useQuery","gql","UserContext","MyShipments","state","waybill","data","loading","actions","createShipment","setWaybill","user","shipments","map","shipment","key","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,KADH;AAEJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB;AAFL,MAGFX,UAAU,CAACG,WAAD,CAHd,CADwB,CAMxB;AACA;AACA;AACA;AACA;;AAEA,MAAIK,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,cACGD,IAAI,CAACK,IAAL,CAAUC,SAAV,IACCN,IAAI,CAACK,IAAL,CAAUC,SAAV,CAAoBC,GAApB,CAAwB,CAACC,QAAD,EAAWC,GAAX,kBACtB;AAAA,gBAAcD,QAAQ,CAACE;AAAvB,OAAQD,GAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMZ,W;;KAAAA,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { UserContext } from \"./context/UserContext\";\n\n// const GET_SHIPMENTS = gql`\n//   query ($id: ID!) {\n//     user(id: $id) {\n//       shipments {\n//         id\n//         waybill\n//       }\n//     }\n//   }\n// `;\n\nconst MyShipments = () => {\n  const {\n    state: { waybill, data, loading },\n    actions: { createShipment, setWaybill },\n  } = useContext(UserContext);\n\n  // const { error, data, loading } = useQuery(GET_SHIPMENTS, {\n  //   variables: {\n  //     id: 2,\n  //   },\n  // });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div>\n      {data.user.shipments &&\n        data.user.shipments.map((shipment, key) => (\n          <p key={key}>{shipment.id}</p>\n        ))}\n    </div>\n  );\n};\n\nexport default MyShipments;\n"]},"metadata":{},"sourceType":"module"}