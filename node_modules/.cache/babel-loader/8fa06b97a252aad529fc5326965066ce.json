{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/mutations/UpdateShipmentContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateShipmentContext = /*#__PURE__*/createContext();\nconst UPDATE_SHIPMENT = gql`\n  mutation ($id: ID!, $user_id: ID!, $waybill: Int!) {\n    updateShipment(id: $id, user_id: $user_id, waybill: $waybill) {\n      id\n    }\n  }\n`;\n\nconst UpdateShipmentContextProvider = props => {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [waybill, setWaybill] = useState(\"\");\n  const [updateShipment, {\n    data,\n    loading,\n    error\n  }] = useMutation(UPDATE_SHIPMENT, {\n    context: {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"\")}`\n      }\n    }\n  });\n  const context = {\n    state: {\n      data,\n      loading,\n      error,\n      waybill\n    },\n    actions: {\n      updateShipment,\n      setUserId,\n      setWaybill,\n      setId\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UpdateShipmentContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateShipmentContextProvider, \"BO2yNz+dv5qNDraSJ+CEHc9g/Ms=\", false, function () {\n  return [useMutation];\n});\n\n_c = UpdateShipmentContextProvider;\nexport default UpdateShipmentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateShipmentContextProvider\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/mutations/UpdateShipmentContext.js"],"names":["React","createContext","useState","useMutation","gql","UpdateShipmentContext","UPDATE_SHIPMENT","UpdateShipmentContextProvider","props","id","setId","userId","setUserId","waybill","setWaybill","updateShipment","data","loading","error","context","headers","authorization","localStorage","getItem","state","actions","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;;AAEA,OAAO,MAAMC,qBAAqB,gBAAGJ,aAAa,EAA3C;AAEP,MAAMK,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMG,6BAA6B,GAAIC,KAAD,IAAW;AAAA;;AAC/C,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACa,cAAD,EAAiB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAjB,IAA6Cf,WAAW,CAC5DG,eAD4D,EAE5D;AACEa,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,EAArB,CAAyB;AAD3C;AADF;AADX,GAF4D,CAA9D;AAWA,QAAMJ,OAAO,GAAG;AACdK,IAAAA,KAAK,EAAE;AAAER,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,KAAjB;AAAwBL,MAAAA;AAAxB,KADO;AAEdY,IAAAA,OAAO,EAAE;AACPV,MAAAA,cADO;AAEPH,MAAAA,SAFO;AAGPE,MAAAA,UAHO;AAIPJ,MAAAA;AAJO;AAFK,GAAhB;AAUA,sBACE,QAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAES,OAAvC;AAAA,cACGX,KAAK,CAACkB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;GAAMnB,6B;UAK+CJ,W;;;KAL/CI,6B;AAiCN,eAAeA,6BAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\n\nexport const UpdateShipmentContext = createContext();\n\nconst UPDATE_SHIPMENT = gql`\n  mutation ($id: ID!, $user_id: ID!, $waybill: Int!) {\n    updateShipment(id: $id, user_id: $user_id, waybill: $waybill) {\n      id\n    }\n  }\n`;\n\nconst UpdateShipmentContextProvider = (props) => {\n  const [id, setId] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [waybill, setWaybill] = useState(\"\");\n\n  const [updateShipment, { data, loading, error }] = useMutation(\n    UPDATE_SHIPMENT,\n    {\n      context: {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"\")}`,\n        },\n      },\n    }\n  );\n\n  const context = {\n    state: { data, loading, error, waybill },\n    actions: {\n      updateShipment,\n      setUserId,\n      setWaybill,\n      setId,\n    },\n  };\n\n  return (\n    <UpdateShipmentContext.Provider value={context}>\n      {props.children}\n    </UpdateShipmentContext.Provider>\n  );\n};\n\nexport default UpdateShipmentContextProvider;\n"]},"metadata":{},"sourceType":"module"}