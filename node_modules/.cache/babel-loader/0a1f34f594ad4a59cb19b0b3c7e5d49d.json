{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/context/GetShipmentContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetShipmentContext = /*#__PURE__*/createContext();\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst GetShipmentContextProvider = props => {\n  _s();\n\n  const [id, setId] = useState();\n  const [getShipments, {\n    error,\n    data,\n    loading,\n    called\n  }] = useLazyQuery(GET_SHIPMENTS, {\n    variables: {\n      id: 1\n    }\n  });\n  const context = {\n    state: {\n      data,\n      loading,\n      error,\n      called,\n      ref\n    },\n    actions: {\n      getShipments,\n      setId,\n      setRef\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GetShipmentContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetShipmentContextProvider, \"hb1v71S86k9iRfsIzhyBinHVGwA=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = GetShipmentContextProvider;\nexport default GetShipmentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetShipmentContextProvider\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/context/GetShipmentContext.js"],"names":["React","createContext","useState","useLazyQuery","gql","GetShipmentContext","GET_SHIPMENTS","GetShipmentContextProvider","props","id","setId","getShipments","error","data","loading","called","variables","context","state","ref","actions","setRef","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,gBAAlC;;AAEA,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,EAAxC;AAEP,MAAMK,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMG,0BAA0B,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcR,QAAQ,EAA5B;AAEA,QAAM,CAACS,YAAD,EAAe;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,GAAf,IAAmDZ,YAAY,CACnEG,aADmE,EAEnE;AACEU,IAAAA,SAAS,EAAE;AACTP,MAAAA,EAAE,EAAE;AADK;AADb,GAFmE,CAArE;AASA,QAAMQ,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAE;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBF,MAAAA,KAAjB;AAAwBG,MAAAA,MAAxB;AAAgCI,MAAAA;AAAhC,KADO;AAEdC,IAAAA,OAAO,EAAE;AACPT,MAAAA,YADO;AAEPD,MAAAA,KAFO;AAGPW,MAAAA;AAHO;AAFK,GAAhB;AASA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEJ,OAApC;AAAA,cACGT,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMf,0B;UAGqDJ,Y;;;KAHrDI,0B;AA4BN,eAAeA,0BAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\n\nexport const GetShipmentContext = createContext();\n\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst GetShipmentContextProvider = (props) => {\n  const [id, setId] = useState();\n\n  const [getShipments, { error, data, loading, called }] = useLazyQuery(\n    GET_SHIPMENTS,\n    {\n      variables: {\n        id: 1,\n      },\n    }\n  );\n\n  const context = {\n    state: { data, loading, error, called, ref },\n    actions: {\n      getShipments,\n      setId,\n      setRef,\n    },\n  };\n\n  return (\n    <GetShipmentContext.Provider value={context}>\n      {props.children}\n    </GetShipmentContext.Provider>\n  );\n};\n\nexport default GetShipmentContextProvider;\n"]},"metadata":{},"sourceType":"module"}