{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/MyShipments.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { UserContext } from \"./context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  _s();\n\n  const {\n    state: {\n      waybill\n    },\n    actions: {\n      getAllUsers,\n      average,\n      setTime\n    }\n  } = useC(UserContext);\n  const {\n    error,\n    data,\n    loading\n  } = useQuery(GET_SHIPMENTS, {\n    variables: {\n      id: 2\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.user.shipments && data.user.shipments.map((shipment, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: shipment.id\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyShipments, \"unu/BTuYmqgDJJIM/CU9V39WVW0=\", true, function () {\n  return [useQuery];\n});\n\n_c = MyShipments;\nexport default MyShipments;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyShipments\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/MyShipments.js"],"names":["React","useQuery","gql","UserContext","GET_SHIPMENTS","MyShipments","state","waybill","actions","getAllUsers","average","setTime","useC","error","data","loading","variables","id","user","shipments","map","shipment","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,MAAMG,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB;AAFL,MAGFC,IAAI,CAACT,WAAD,CAHR;AAKA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA2Bd,QAAQ,CAACG,aAAD,EAAgB;AACvDY,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAE;AADK;AAD4C,GAAhB,CAAzC;;AAMA,MAAIF,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,cACGD,IAAI,CAACI,IAAL,CAAUC,SAAV,IACCL,IAAI,CAACI,IAAL,CAAUC,SAAV,CAAoBC,GAApB,CAAwB,CAACC,QAAD,EAAWC,GAAX,kBACtB;AAAA,gBAAcD,QAAQ,CAACJ;AAAvB,OAAQK,GAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD;;GAAMjB,W;UAM6BJ,Q;;;KAN7BI,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { UserContext } from \"./context/UserContext\";\n\nconst GET_SHIPMENTS = gql`\n  query ($id: ID!) {\n    user(id: $id) {\n      shipments {\n        id\n        waybill\n      }\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  const {\n    state: { waybill },\n    actions: { getAllUsers, average, setTime },\n  } = useC(UserContext);\n\n  const { error, data, loading } = useQuery(GET_SHIPMENTS, {\n    variables: {\n      id: 2,\n    },\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n  return (\n    <div>\n      {data.user.shipments &&\n        data.user.shipments.map((shipment, key) => (\n          <p key={key}>{shipment.id}</p>\n        ))}\n    </div>\n  );\n};\n\nexport default MyShipments;\n"]},"metadata":{},"sourceType":"module"}