{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/MyShipments.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getShipments = gql`\n  query {\n    users {\n      name\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  _s();\n\n  console.log(get);\n  const {\n    error,\n    data,\n    loading\n  } = useQuery(getShipments);\n  console.log({\n    error,\n    data,\n    loading\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.users && data.users.map((i, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 57\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MyShipments, \"WyHDqd1xgy8u8gq0vMPBohHiH1Q=\", false, function () {\n  return [useQuery];\n});\n\n_c = MyShipments;\nexport default MyShipments;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyShipments\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/MyShipments.js"],"names":["React","useQuery","gql","getShipments","MyShipments","console","log","get","error","data","loading","users","map","i","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAME,WAAW,GAAG,MAAM;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA2BT,QAAQ,CAACE,YAAD,CAAzC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAAZ;AACA,sBAAO;AAAA,cAAMD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,CAACC,CAAD,EAAIC,GAAJ,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B;AAApB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;GAAMV,W;UAE6BH,Q;;;KAF7BG,W;AAON,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst getShipments = gql`\n  query {\n    users {\n      name\n    }\n  }\n`;\n\nconst MyShipments = () => {\n  console.log(get);\n  const { error, data, loading } = useQuery(getShipments);\n  console.log({ error, data, loading });\n  return <div>{data.users && data.users.map((i, key) => <p>Hi</p>)}</div>;\n};\n\nexport default MyShipments;\n"]},"metadata":{},"sourceType":"module"}