{"ast":null,"code":"var _jsxFileName = \"/home/dana/Documents/Pixel38-Front/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetShipmentContext } from \"./mutations/GetShipmentContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = gql`\n  mutation ($username: String!, $password: String!) {\n    login(input: { username: $username, password: $password }) {\n      access_token\n      user {\n        id\n      }\n    }\n  }\n`;\n\nconst Login = () => {\n  _s();\n\n  const {\n    actions: {\n      setShow\n    }\n  } = useContext(GetShipmentContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, {\n    data,\n    loading,\n    error\n  }] = useMutation(LOGIN);\n  useEffect(() => {\n    console.log(loading);\n    console.log(data);\n\n    if (data) {\n      localStorage.setItem(\"token\", data.login.access_token);\n      localStorage.setItem(\"user\", data.login.user.id);\n      history.push(\"/\");\n      setShow(1);\n    }\n  }, [loading]);\n\n  const signIn = e => {\n    e.preventDefault();\n    login({\n      variables: {\n        username: email,\n        password\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: signIn,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => history.push(\"/register\"),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"gErHuGn+9cr3mgN+UR9WaakT26E=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dana/Documents/Pixel38-Front/src/Login.js"],"names":["React","useContext","useEffect","useState","useMutation","gql","useHistory","GetShipmentContext","LOGIN","Login","actions","setShow","history","email","setEmail","password","setPassword","login","data","loading","error","console","log","localStorage","setItem","access_token","user","id","push","signIn","e","preventDefault","variables","username","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetShipmentContext } from \"./mutations/GetShipmentContext\";\n\nconst LOGIN = gql`\n  mutation ($username: String!, $password: String!) {\n    login(input: { username: $username, password: $password }) {\n      access_token\n      user {\n        id\n      }\n    }\n  }\n`;\n\nconst Login = () => {\n  const {\n    actions: { setShow },\n  } = useContext(GetShipmentContext);\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [login, { data, loading, error }] = useMutation(LOGIN);\n\n  useEffect(() => {\n    console.log(loading);\n    console.log(data);\n    if (data) {\n      localStorage.setItem(\"token\", data.login.access_token);\n      localStorage.setItem(\"user\", data.login.user.id);\n      history.push(\"/\");\n      setShow(1);\n    }\n  }, [loading]);\n\n  const signIn = (e) => {\n    e.preventDefault();\n    login({ variables: { username: email, password } });\n  };\n\n  return (\n    <div className=\"create\">\n      <h2>Login</h2>\n      <form onSubmit={signIn}>\n        <label>Email</label>\n        <input\n          type=\"email\"\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <label>Password</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">login</button>\n      </form>\n      <div className=\"reg\">\n        <p>\n          Don't have an account?{\" \"}\n          <span onClick={() => history.push(\"/register\")}>Register</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}